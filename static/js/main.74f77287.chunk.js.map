{"version":3,"sources":["redux/actions.js","components/Navigation.js","components/CornerDisplay.js","App.js","redux/sagas.js","redux/reducers.js","redux/store.js","index.js"],"names":["resetAllEvents","type","Navigation","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleStart","_this$props","interval","totalTime","on","n","Math","floor","setTimer","_loop","i","setTimeout","corner","random","setCorner","handleIntervalChange","setInterval","submitCustomTime","totalTimeRef","parseInt","current","value","setTotalTime","React","createRef","_this2","react_default","a","createElement","NewContainer","NewNavbar","Navbar","Brand","href","Toggle","aria-controls","Nav","className","Link","onClick","NavDropdown","title","Item","NewFormControl","placeholder","ref","SubmitButton","Component","styled","Container","_templateObject","taggedTemplateLiteral","_templateObject2","FormControl","_templateObject3","Button","_templateObject4","mapDispatchToProps","connect","state","CornerDisplay","handleStop","CornerDisplay_NewContainer","id","NewButton","sx","backgroundColor","color","fontSize","CornerDisplay_templateObject","CornerDisplay_templateObject2","App","App_NewContainer","components_Navigation","components_CornerDisplay","App_templateObject","appWatcher","rootSaga","action","regenerator_default","wrap","_context","prev","next","put","stop","_marked","_context2","_marked2","_context3","_marked3","_context4","_marked4","highestTimeoutId","_context5","clearTimeout","_marked5","_context6","takeLatest","_marked6","_context7","all","_marked7","initialState","sagaMiddleware","createSagaMiddleware","store","createStore","arguments","length","undefined","objectSpread","applyMiddleware","run","ReactDOM","render","es","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.74f77287.chunk.js","sourcesContent":["export const setCorner = (corner) => {\n    return {\n        type: \"SET_CORNER\",\n        corner\n    }\n}\n\nexport const setInterval = (interval) => {\n    return {\n        type: \"SET_INTERVAL\",\n        interval\n    }\n}\n\nexport const setTimer = (on) => {\n    return {\n        type: \"SET_TIMER\",\n        on\n    }\n}\n\nexport const setTotalTime = (totalTime) => {\n    return {\n        type: \"SET_TOTAL_TIME\",\n        totalTime\n    }\n}\n\nexport const resetAllEvents = () => {\n    return {\n        type: \"RESET_ALL_EVENTS\"\n    }\n}","import React, { Component } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport {\n    Form, \n    FormControl,\n    Nav,\n    Navbar,\n    NavDropdown,\n} from \"react-bootstrap\";\nimport Button from \"@mui/material/Button\";\nimport { connect } from \"react-redux\";\nimport { \n    setCorner,\n    setInterval,\n    setTimer,\n    setTotalTime,\n    resetAllEvents\n } from \"../redux/actions\";\n import styled from \"styled-components\";\n\nclass Navigation extends Component {\n    constructor(props) {\n        super(props);\n        this.totalTimeRef = React.createRef();\n    }\n\n    handleStart = () => {\n        const {\n            interval,\n            totalTime,\n            on\n        } = this.props;\n        const n = Math.floor(totalTime / interval);\n\n        if (on) {\n            this.props.resetAllEvents();\n            return;\n        }\n        else {\n            this.props.setTimer(true);\n        }\n\n        for (let i = 0; i < n; i++) {\n            setTimeout(() => {\n                const { on } = this.props;\n                if (!on) {\n                    this.props.resetAllEvents();\n                    return;\n                }\n                const corner = Math.floor((Math.random() * 6) + 1);\n                this.props.setCorner(corner);\n\n                // Flash\n                setTimeout(() => {\n                    if (i == n - 1) {\n                        this.props.resetAllEvents();\n                    }\n                    else {\n                        this.props.setCorner(\"\");\n                    }\n                }, interval - 250);\n            }, interval * i);\n        }\n        \n    }\n\n    handleIntervalChange = (interval) => {\n        interval = interval * 1000;\n        this.props.setInterval(interval);\n        this.props.resetAllEvents();\n    }\n\n    submitCustomTime = () => {\n        if (!this.totalTimeRef) {\n            return;\n        }\n        const totalTime = parseInt(this.totalTimeRef.current.value) * 1000;\n        this.props.setTotalTime(totalTime);\n        this.props.resetAllEvents();\n    }\n\n    render() {\n        return(\n            <NewContainer>\n                <NewNavbar>\n                    <Navbar.Brand href=\"#home\">Six Corners</Navbar.Brand>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Nav className=\"me-auto\">\n                        <Nav.Link onClick={ this.handleStart }>Start</Nav.Link>\n                        <NavDropdown title=\"Intervals\">\n                            <NavDropdown.Item onClick={ () => this.handleIntervalChange(0.5) }>0.5</NavDropdown.Item>\n                            <NavDropdown.Item onClick={ () => this.handleIntervalChange(0.6) }>0.6</NavDropdown.Item>\n                            <NavDropdown.Item onClick={ () => this.handleIntervalChange(0.7) }>0.7</NavDropdown.Item>\n                            <NavDropdown.Item onClick={ () => this.handleIntervalChange(0.8) }>0.8</NavDropdown.Item>\n                            <NavDropdown.Item onClick={ () => this.handleIntervalChange(0.9) }>0.9</NavDropdown.Item>\n                            <NavDropdown.Item onClick={ () => this.handleIntervalChange(1) }>1</NavDropdown.Item>\n                            <NavDropdown.Item onClick={ () => this.handleIntervalChange(1.1) }>1.1</NavDropdown.Item>\n                            <NavDropdown.Item onClick={ () => this.handleIntervalChange(1.2) }>1.2</NavDropdown.Item>\n                            <NavDropdown.Item onClick={ () => this.handleIntervalChange(1.3) }>1.3</NavDropdown.Item>\n                            <NavDropdown.Item onClick={ () => this.handleIntervalChange(1.4) }>1.4</NavDropdown.Item>\n                            <NavDropdown.Item onClick={ () => this.handleIntervalChange(1.5) }>1.5</NavDropdown.Item>\n                            <NavDropdown.Item onClick={ () => this.handleIntervalChange(1.6) }>1.6</NavDropdown.Item>\n                            <NavDropdown.Item onClick={ () => this.handleIntervalChange(1.7) }>1.7</NavDropdown.Item>\n                            <NavDropdown.Item onClick={ () => this.handleIntervalChange(1.8) }>1.8</NavDropdown.Item>\n                            <NavDropdown.Item onClick={ () => this.handleIntervalChange(1.9) }>1.9</NavDropdown.Item>\n                            <NavDropdown.Item onClick={ () => this.handleIntervalChange(2) }>2</NavDropdown.Item>\n                        </NavDropdown>\n                    </Nav>\n                    <Nav>\n                        <NewFormControl type=\"text\" placeholder=\"() Seconds\" ref={ this.totalTimeRef }/>\n                        <SubmitButton onClick={ this.submitCustomTime }>Submit</SubmitButton>\n                    </Nav>\n                </NewNavbar>\n            </NewContainer>\n        );\n    }\n}\n\nconst NewContainer = styled(Container)`\n    width: 100%;\n    display: flex;\n    flex-direction: row;\n`;\n\nconst NewNavbar = styled(Navbar)`\n    width: calc(15px + 100%);\n    border-bottom: 2px solid #eee;\n`;\n\nconst NewFormControl = styled(FormControl)`\n    box-sizing: border-box;\n    &:hover, &:active, &:focus {\n        box-shadow: none;\n        border: 1px solid royalblue !important;\n    }\n    width: 120px;\n`;\n\nconst SubmitButton = styled(Button)`\n    color: royalblue;\n    border: 1px solid royalblue !important;\n    &:hover, &:active, &:focus {\n        background-color: royalblue !important;\n        color: white;\n    }\n    width: 100px;\n    margin-left: 5% !important;\n    margin-right: 5% !important;\n`;\n\nconst mapStateToProps = (state) => ({\n    interval: state.interval,\n    totalTime: state.totalTime,\n    on: state.on\n});\n\nconst mapDispatchToProps = {\n    setCorner: setCorner,\n    setInterval: setInterval,\n    setTimer: setTimer,\n    setTotalTime: setTotalTime,\n    resetAllEvents: resetAllEvents\n};\n  \nexport default connect(mapStateToProps, mapDispatchToProps)(Navigation);","import React, { Component } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport Button from \"@mui/material/Button\";\nimport { connect } from \"react-redux\";\nimport { resetAllEvents } from \"../redux/actions\";\nimport styled from \"styled-components\";\n\nclass CornerDisplay extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    handleStop = () => {\n        this.props.resetAllEvents();\n    }\n\n\n    render() {\n        const { corner } = this.props;\n\n        return (\n            <NewContainer id=\"display\">\n                <NewButton \n                    sx={{\n                        backgroundColor: \"whitesmoke\",\n                        color: \"black\",\n                        fontSize: 250\n                    }} \n                    onClick={ this.handleStop }\n                >\n                    {corner}\n                </NewButton>\n            </NewContainer>\n        )\n    }\n}\n\nconst NewContainer = styled(Container)`\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    padding-top: 5%;\n    background-color: white;\n`;\n\nconst NewButton= styled(Button)`\n    width: 80%;\n`;\n\nconst mapStateToProps = (state) => ({\n    corner: state.corner\n});\n\nconst mapDispatchToProps = {\n    resetAllEvents: resetAllEvents\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CornerDisplay);","\nimport React, { Component } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport Navigation from \"./components/Navigation\";\nimport CornerDisplay from \"./components/CornerDisplay\";\nimport styled from \"styled-components\";\n\nclass App extends Component {\n    render() {\n        return (\n            <NewContainer id=\"app\">\n                <Navigation></Navigation>\n                <CornerDisplay></CornerDisplay>\n            </NewContainer>\n        );\n    }\n}\n\nconst NewContainer = styled(Container)`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  background-color: white;\n`;\n\nexport default App;\n","import { put, all, takeLatest } from \"redux-saga/effects\";\n\nfunction* setCorner(action) {\n    yield put({\n        type: \"CORNER_UPDATED\",\n        corner: action.corner\n    });\n}\n\nfunction* setInterval(action) {\n    yield put({\n        type: \"INTERVAL_UPDATED\",\n        interval: action.interval\n    });\n}\n\nfunction* setTimer(action) {\n    yield put({\n        type: \"TIMER_UPDATED\",\n        on: action.on\n    });\n}\n\nfunction* setTotalTime(action) {\n    yield put({\n        type: \"TOTAL_TIME_UPDATED\",\n        totalTime: action.totalTime\n    });\n}\n\nfunction* resetAllEvents(action) {\n    const highestTimeoutId = setTimeout(\";\");\n    for (let i = 0; i < highestTimeoutId; i++) {\n        clearTimeout(i);\n    }\n    \n    yield put({\n        type: \"ALL_EVENTS_RESET\"\n    });\n}\n\nfunction* appWatcher() {\n    yield takeLatest(\"SET_CORNER\", setCorner);\n    yield takeLatest(\"SET_INTERVAL\", setInterval);\n    yield takeLatest(\"SET_TIMER\", setTimer);\n    yield takeLatest(\"SET_TOTAL_TIME\", setTotalTime);\n    yield takeLatest(\"RESET_ALL_EVENTS\", resetAllEvents);\n}\n  \nexport default function* rootSaga() {\n    yield all([\n        appWatcher()\n    ]);\n}","const initialState = {\n    corner: 0,\n    interval: 2000,\n    totalTime: 120000,\n    on: false\n}\n\nexport default (state = initialState, action) => {\n    switch(action.type) {\n        case \"CORNER_UPDATED\":\n            return {\n                ...state,\n                corner: action.corner\n            }\n        case \"INTERVAL_UPDATED\":\n            return {\n                ...state,\n                interval: action.interval\n            }\n        case \"TIMER_UPDATED\":\n            return {\n                ...state,\n                on: action.on\n            }\n        case \"TOTAL_TIME_UPDATED\":\n            return {\n                ...state,\n                totalTime: action.totalTime\n            }\n        case \"ALL_EVENTS_RESET\":\n            return {\n                ...state,\n                corner: 0,\n                on: false\n            }\n    default:\n          return state;\n    }\n}","import { createStore, applyMiddleware } from \"redux\";\nimport createSagaMiddleware  from \"redux-saga\";\nimport rootSaga from \"./sagas\";\nimport rootReducer from \"./reducers.js\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n    rootReducer,\n    applyMiddleware(sagaMiddleware)\n);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}