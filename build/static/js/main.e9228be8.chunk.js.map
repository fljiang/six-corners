{"version":3,"sources":["redux/actions.js","components/Navigation.js","components/CornerDisplay.js","App.js","redux/sagas.js","redux/reducers.js","redux/store.js","index.js"],"names":["resetAllEvents","type","Navigation","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleFourCorners","fourCorners","setFourCorners","handleInterval","intervalRef","interval","parseInt","current","value","setInterval","handleTime","timeRef","time","setTime","React","createRef","react_default","a","createElement","NewContainer","TopNavbar","Navbar","Brand","href","Toggle","aria-controls","Nav","className","FormGroup","ToggleContainer","LeftTypography","Switch","onChange","RightTypography","BottomNavbar","IntervalFormControl","placeholder","ref","TimeFormControl","Component","styled","Container","_templateObject","taggedTemplateLiteral","_templateObject2","_templateObject3","_templateObject4","Typography","_templateObject5","_templateObject6","FormControl","_templateObject7","_templateObject8","mapDispatchToProps","connect","state","on","CornerDisplay","handleStart","_this$props","n","Math","floor","startTimer","_loop","i","setTimeout","corner","random","setCorner","1","2","3","4","CornerDisplay_NewContainer","id","NewButton","sx","backgroundColor","color","fontSize","onClick","CornerDisplay_templateObject","Button","CornerDisplay_templateObject2","App","App_NewContainer","components_Navigation","components_CornerDisplay","App_templateObject","appWatcher","rootSaga","action","regenerator_default","wrap","_context","prev","next","put","stop","_marked","_context2","_marked2","_context3","_marked3","_context4","_marked4","_context5","_marked5","highestTimeoutId","_context6","clearTimeout","_marked6","_context7","takeLatest","_marked7","_context8","all","_marked8","initialState","sagaMiddleware","createSagaMiddleware","store","createStore","arguments","length","undefined","objectSpread","applyMiddleware","run","ReactDOM","render","es","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.e9228be8.chunk.js","sourcesContent":["export const setCorner = (corner) => {\n    return {\n        type: \"SET_CORNER\",\n        corner\n    }\n}\n\nexport const setFourCorners = (fourCorners) => {\n    return {\n        type: \"SET_FOUR_CORNERS\",\n        fourCorners\n    }\n}\n\nexport const setInterval = (interval) => {\n    return {\n        type: \"SET_INTERVAL\",\n        interval\n    }\n}\n\nexport const setTime = (time) => {\n    return {\n        type: \"SET_TIME\",\n        time\n    }\n}\n\nexport const startTimer = (on) => {\n    return {\n        type: \"START_TIMER\",\n        on\n    }\n}\n\nexport const resetAllEvents = () => {\n    return {\n        type: \"RESET_ALL_EVENTS\"\n    }\n}","import React, { Component } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport {\n    FormControl,\n    FormGroup,\n    Nav,\n    Navbar,\n} from \"react-bootstrap\";\nimport Switch from '@mui/material/Switch';\nimport Typography from '@mui/material/Typography';\nimport { connect } from \"react-redux\";\nimport { \n    setFourCorners,\n    setInterval,\n    setTime,\n    resetAllEvents\n} from \"../redux/actions\";\nimport styled from \"styled-components\";\n\nclass Navigation extends Component {\n    constructor(props) {\n        super(props);\n        this.intervalRef = React.createRef();\n        this.timeRef = React.createRef();\n    }\n\n    handleFourCorners = () => {\n        const { fourCorners } = this.props;\n        this.props.setFourCorners(!fourCorners);\n        this.props.resetAllEvents();\n    }\n\n    handleInterval = () => {\n        if (!this.intervalRef) {\n            return;\n        }\n\n        const interval = parseInt(this.intervalRef.current.value) * 1000\n        this.props.setInterval(interval);\n        this.props.resetAllEvents();\n    }\n\n    handleTime = () => {\n        if (!this.timeRef) {\n            return;\n        }\n        \n        const time = parseInt(this.timeRef.current.value) * 1000;\n        this.props.setTime(time);\n        this.props.resetAllEvents();\n    }\n\n    render() {\n        return(\n            <NewContainer>\n                <TopNavbar>\n                    <Navbar.Brand href=\"#home\">Six Corners</Navbar.Brand>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Nav className=\"toggle\">\n                        <FormGroup>\n                            <ToggleContainer>\n                                <LeftTypography>6</LeftTypography>\n                                <Switch onChange={ this.handleFourCorners } />\n                                <RightTypography>4</RightTypography>\n                            </ToggleContainer>\n                        </FormGroup>\n                    </Nav>\n                </TopNavbar>\n                <BottomNavbar>\n                    <Nav>\n                        <IntervalFormControl type=\"text\" placeholder=\"Interval (s)\" ref={ this.intervalRef } onChange={ this.handleInterval } />\n                        <TimeFormControl type=\"text\" placeholder=\"Time (s)\" ref={ this.timeRef } onChange={ this.handleTime } />\n                    </Nav>\n                </BottomNavbar>\n            </NewContainer>\n        );\n    }\n}\n\nconst NewContainer = styled(Container)`\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n`;\n\nconst ToggleContainer = styled(Container)`\n    width: 100%;\n    display: flex;\n    flex-direction: row;\n`;\n\nconst TopNavbar = styled(Navbar)`\n    width: 100%;\n`;\n\nconst BottomNavbar = styled(Navbar)`\n    width: 100%;\n    border-bottom: 2px solid #eee;\n`;\n\nconst LeftTypography = styled(Typography)`\n    margin-top: 8px !important;\n    margin-left: -5px !important;\n    margin-right: 5px !important;\n`;\n\nconst RightTypography = styled(Typography)`\n    margin-top: 8px !important;\n    margin-left: 5px !important;\n`;\n\nconst IntervalFormControl = styled(FormControl)`\n    box-sizing: border-box;\n    &:hover, &:active, &:focus {\n        box-shadow: none;\n        border: 1px solid royalblue !important;\n    }\n    width: 105px;\n    margin-right: 15px;\n`;\n\nconst TimeFormControl = styled(FormControl)`\n    box-sizing: border-box;\n    &:hover, &:active, &:focus {\n        box-shadow: none;\n        border: 1px solid royalblue !important;\n    }\n    width: 90px;\n    margin-right: 15px;\n`;\n\nconst mapStateToProps = (state) => ({\n    interval: state.interval,\n    time: state.time,\n    on: state.on,\n    fourCorners: state.fourCorners\n});\n\nconst mapDispatchToProps = {\n    setFourCorners,\n    setInterval: setInterval,\n    setTime: setTime,\n    resetAllEvents: resetAllEvents\n};\n  \nexport default connect(mapStateToProps, mapDispatchToProps)(Navigation);","import React, { Component } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport Button from \"@mui/material/Button\";\nimport { connect } from \"react-redux\";\nimport { \n    setCorner,\n    startTimer,\n    resetAllEvents\n} from \"../redux/actions\";\nimport styled from \"styled-components\";\n\nclass CornerDisplay extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    handleStart = () => {\n        const {\n            interval,\n            time,\n            on,\n            fourCorners\n        } = this.props;\n        const n = Math.floor(time / interval);\n\n        if (on) {\n            this.props.resetAllEvents();\n            return;\n        }\n        else {\n            this.props.startTimer(true);\n        }\n\n        for (let i = 0; i < n; i++) {\n            setTimeout(() => {\n                const { on } = this.props;\n                if (!on) {\n                    this.props.resetAllEvents();\n                    return;\n                }\n                \n                if (!fourCorners) {\n                    const corner = Math.floor((Math.random() * 6) + 1);\n                    this.props.setCorner(corner);\n                }\n                else {\n                    const corners = {\n                        1: 1,\n                        2: 2,\n                        3: 5,\n                        4: 6\n                    }\n                    const corner = Math.floor((Math.random() * 4) + 1);\n                    this.props.setCorner(corners[corner]);\n                }\n\n                // Flash\n                setTimeout(() => {\n                    this.props.setCorner(\"\");\n                    if (i === n - 1) {\n                        this.props.resetAllEvents();\n                    }\n                }, interval - 250);\n            }, interval * i);\n        }\n    }\n\n    render() {\n        const { corner } = this.props;\n\n        return (\n            <NewContainer id=\"display\">\n                <NewButton \n                    sx={{\n                        backgroundColor: \"whitesmoke\",\n                        color: \"black\",\n                        fontSize: 250\n                    }} \n                    onClick={ this.handleStart }\n                >\n                    {corner}\n                </NewButton>\n            </NewContainer>\n        )\n    }\n}\n\nconst NewContainer = styled(Container)`\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    background-color: white;\n    margin-top: 15px;\n`;\n\nconst NewButton= styled(Button)`\n    width: 100%;\n`;\n\nconst mapStateToProps = (state) => ({\n    corner: state.corner,\n    interval: state.interval,\n    time: state.time,\n    on: state.on,\n    fourCorners: state.fourCorners\n});\n\nconst mapDispatchToProps = {\n    setCorner: setCorner,\n    startTimer: startTimer,\n    resetAllEvents: resetAllEvents\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CornerDisplay);","\nimport React, { Component } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport Navigation from \"./components/Navigation\";\nimport CornerDisplay from \"./components/CornerDisplay\";\nimport styled from \"styled-components\";\n\nclass App extends Component {\n    render() {\n        return (\n            <NewContainer id=\"app\">\n                <Navigation></Navigation>\n                <CornerDisplay></CornerDisplay>\n            </NewContainer>\n        );\n    }\n}\n\nconst NewContainer = styled(Container)`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  background-color: white;\n`;\n\nexport default App;\n","import { put, all, takeLatest } from \"redux-saga/effects\";\n\nfunction* setCorner(action) {\n    yield put({\n        type: \"CORNER_UPDATED\",\n        corner: action.corner\n    });\n}\n\nfunction* setFourCorners(action) {\n    yield put({\n        type: \"FOUR_CORNERS_UPDATED\",\n        fourCorners: action.fourCorners\n    });\n}\n\nfunction* setInterval(action) {\n    yield put({\n        type: \"INTERVAL_UPDATED\",\n        interval: action.interval\n    });\n}\n\nfunction* setTime(action) {\n    yield put({\n        type: \"TIME_UPDATED\",\n        time: action.time\n    });\n}\n\nfunction* startTimer(action) {\n    yield put({\n        type: \"TIMER_STARTED\",\n        on: action.on\n    });\n}\n\nfunction* resetAllEvents() {\n    const highestTimeoutId = setTimeout(\";\");\n    for (let i = 0; i < highestTimeoutId; i++) {\n        clearTimeout(i);\n    }\n    \n    yield put({\n        type: \"ALL_EVENTS_RESET\"\n    });\n}\n\nfunction* appWatcher() {\n    yield takeLatest(\"SET_CORNER\", setCorner);\n    yield takeLatest(\"SET_FOUR_CORNERS\", setFourCorners);\n    yield takeLatest(\"SET_INTERVAL\", setInterval);\n    yield takeLatest(\"SET_TIME\", setTime);\n    yield takeLatest(\"START_TIMER\", startTimer);\n    yield takeLatest(\"RESET_ALL_EVENTS\", resetAllEvents);\n}\n  \nexport default function* rootSaga() {\n    yield all([\n        appWatcher()\n    ]);\n}","const initialState = {\n    corner: \"start\",\n    interval: 2000,\n    time: 120000,\n    on: false,\n    fourCorners: false\n}\n\nexport default (state = initialState, action) => {\n    switch(action.type) {\n        case \"CORNER_UPDATED\":\n            return {\n                ...state,\n                corner: action.corner\n            }\n        case \"FOUR_CORNERS_UPDATED\":\n            return {\n                ...state,\n                fourCorners: action.fourCorners\n            }\n        case \"INTERVAL_UPDATED\":\n            return {\n                ...state,\n                interval: action.interval\n            }\n        case \"TIME_UPDATED\":\n            return {\n                ...state,\n                time: action.time\n            }\n        case \"TIMER_STARTED\":\n            return {\n                ...state,\n                on: action.on\n            }\n        case \"ALL_EVENTS_RESET\":\n            return {\n                ...state,\n                corner: \"start\",\n                on: false\n            }\n    default:\n          return state;\n    }\n}","import { createStore, applyMiddleware } from \"redux\";\nimport createSagaMiddleware  from \"redux-saga\";\nimport rootSaga from \"./sagas\";\nimport rootReducer from \"./reducers.js\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n    rootReducer,\n    applyMiddleware(sagaMiddleware)\n);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}